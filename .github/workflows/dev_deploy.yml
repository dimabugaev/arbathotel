# This is a basic workflow to help you get started with Actions

name: Deploy on dev enviroment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Build zip
        run: |
          cd 2_infrastructure/
          ls build/
          cp src/my_utility.py build/
          cp src/employees_reports_data.py build/
          cp src/dict_operate_data.py build/
          cp src/extract_bnovo_data.py build/
          cp src/extract_bnovo_finance.py build/
          cd build
          zip -r employees_reports_data.zip psycopg2/ aws_lambda_powertools/ typing_extensions.py my_utility.py employees_reports_data.py 
          zip -r dict_operate_data.zip psycopg2/ aws_lambda_powertools/ typing_extensions.py my_utility.py dict_operate_data.py 
          zip -r extract_bnovo_data.zip psycopg2/ requests/ charset_normalizer/ certifi/ idna/ urllib3/ typing_extensions.py my_utility.py extract_bnovo_data.py
          zip -r extract_bnovo_finance.zip psycopg2/ requests/ charset_normalizer/ certifi/ idna/ urllib3/ typing_extensions.py my_utility.py extract_bnovo_finance.py  
          cd ../
          ls build/

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: eu-central-1

      - name: Add profile credentials to ~/.aws/credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile arbathotelserviceterraformuser
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile arbathotelserviceterraformuser

      - name: test terraform
        env:
          TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
        run: |
          cd 2_infrastructure/
          terraform -version
          terraform init
          terraform validate
          terraform apply -auto-approve 